cmake_minimum_required(VERSION 3.15)
project(PacketSniffer VERSION 1.0 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(PCAP QUIET)
find_package(Threads REQUIRED)

file(GLOB SOURCES "src/*.cpp")
include_directories(include)

option(USE_QT_GUI "Build Qt GUI instead of web UI" ON)
if(USE_QT_GUI)
  set(CMAKE_AUTOMOC ON)
  find_package(Qt6 COMPONENTS Widgets QUIET)
  if(NOT Qt6_FOUND)
    find_package(Qt5 COMPONENTS Widgets REQUIRED)
    set(QT_NS Qt5)
  else()
    set(QT_NS Qt6)
  endif()
  list(APPEND SOURCES src/gui_main.cpp)
  list(REMOVE_ITEM SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp)
endif()

add_executable(${PROJECT_NAME} ${SOURCES})

if(TARGET PCAP::PCAP)
  target_link_libraries(${PROJECT_NAME} PRIVATE PCAP::PCAP)
else()
  find_package(PkgConfig REQUIRED)
  pkg_check_modules(PCAP REQUIRED libpcap)
  target_include_directories(${PROJECT_NAME} PRIVATE ${PCAP_INCLUDE_DIRS})
  target_link_libraries(${PROJECT_NAME} PRIVATE ${PCAP_LIBRARIES})
endif()

target_link_libraries(${PROJECT_NAME} PRIVATE Threads::Threads)

if(USE_QT_GUI)
  if(DEFINED QT_NS AND QT_NS STREQUAL "Qt5")
    target_link_libraries(${PROJECT_NAME} PRIVATE Qt5::Widgets)
  else()
    target_link_libraries(${PROJECT_NAME} PRIVATE Qt6::Widgets)
  endif()
endif()

option(USE_GEOIP "Enable GeoIP location via libmaxminddb" OFF)
if(USE_GEOIP)
  find_package(PkgConfig REQUIRED)
  pkg_check_modules(MAXMINDDB QUIET libmaxminddb)
  if(MAXMINDDB_FOUND)
    target_compile_definitions(${PROJECT_NAME} PRIVATE USE_GEOIP)
    target_include_directories(${PROJECT_NAME} PRIVATE ${MAXMINDDB_INCLUDE_DIRS})
    target_link_libraries(${PROJECT_NAME} PRIVATE ${MAXMINDDB_LIBRARIES})
  else()
    message(FATAL_ERROR "libmaxminddb not found")
  endif()
endif()
